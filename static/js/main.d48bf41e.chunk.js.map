{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","utils/validateURL.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_ref$onValidateUrl","onValidateUrl","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","_useState5","_useState6","isValidUrl","setIsValidUrl","hasError","trim","notValidUrl","htmlFor","classNames","type","placeholder","e","target","isValid","onBlur","validateUrl","url","test","NewMovie","onAdd","_useState2","count","setCount","setTitle","setDescription","_useState7","_useState8","imageUrl","setImageUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","urlIsNotValid","submitIsDisabled","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d48bf41e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  onValidateUrl?: (url: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  onValidateUrl = () => true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const [isValidUrl, setIsValidUrl] = useState(true);\n  const hasError = touched && required && !value.trim();\n  const notValidUrl = touched && value.trim() && !isValidUrl;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n\n    const isValid = onValidateUrl(e.target.value);\n\n    setIsValidUrl(isValid);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || notValidUrl,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={handleChange}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {notValidUrl && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","export const validateUrl = (url: string) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { validateUrl } from '../../utils/validateURL';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const urlIsNotValid = !validateUrl(imageUrl) || !validateUrl(imdbUrl);\n\n  const submitIsDisabled\n    = !title.trim() || !imageUrl || !imdbUrl || !imdbId || urlIsNotValid;\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImageUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl: imageUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n\n    resetForm();\n\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imageUrl}\n        onChange={setImageUrl}\n        onValidateUrl={validateUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        onValidateUrl={validateUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={submitIsDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const handleAdd = (movie: Movie) => {\n    setMovies(prevMovies => ([\n      ...prevMovies,\n      movie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}