{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_ref$validateUrl","validateUrl","_ref$urlIsValid","urlIsValid","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","hasError","notValidUrl","htmlFor","classNames","type","placeholder","e","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","imageUrl","setImageUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","_useState13","_useState14","imgUrlIsValid","setImgUrlIsValid","_useState15","_useState16","imdbUrlIsValid","setImdbUrlIsValid","submitIsDisabled","url","test","onSubmit","preventDefault","newTitle","newDescription","newImageUrl","newImdbUrl","newImdbId","disabled","App","moviesFromServer","setMovies","m","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b8072a5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validateUrl?: (url: string) => void,\n  urlIsValid?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validateUrl = () => {},\n  urlIsValid = true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n  const notValidUrl = touched && value && !urlIsValid;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n\n    validateUrl(e.target.value);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || notValidUrl,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={handleChange}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {notValidUrl && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [imgUrlIsValid, setImgUrlIsValid] = useState(true);\n  const [imdbUrlIsValid, setImdbUrlIsValid] = useState(true);\n\n  const urlIsNotValid = !imgUrlIsValid || !imdbUrlIsValid;\n\n  const submitIsDisabled\n    = !title || !imageUrl || !imdbUrl || !imdbId || urlIsNotValid;\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImageUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const validateUrl = (url: string) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return pattern.test(url);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl: imageUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n\n    resetForm();\n\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newTitle) => setTitle(newTitle)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newDescription) => setDescription(newDescription)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imageUrl}\n        onChange={(newImageUrl) => setImageUrl(newImageUrl)}\n        validateUrl={(url) => setImgUrlIsValid(validateUrl(url))}\n        urlIsValid={imgUrlIsValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(newImdbUrl) => setImdbUrl(newImdbUrl)}\n        validateUrl={(url) => setImdbUrlIsValid(validateUrl(url))}\n        urlIsValid={imdbUrlIsValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(newImdbId) => setImdbId(newImdbId)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={submitIsDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const handleOnAdd = (movie: Movie) => {\n    setMovies(m => ([\n      ...m,\n      movie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleOnAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}